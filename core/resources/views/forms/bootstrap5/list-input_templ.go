// Code generated by templ - DO NOT EDIT.

package bootstrap5

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import (
	"fmt"

	sdkapi "sdk/api"

	"github.com/flarehotspot/sdk-utils"
	"reflect"
)

func ListInputField(form sdkapi.IHttpForm, sec sdkapi.FormSection, fld sdkapi.IFormField) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		lf, ok := fld.(sdkapi.FormListField)
		if ok {
			templ_7745c5c3_Err = listOptionFields(form, sec, lf).Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		} else {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<span>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var2 string
			templ_7745c5c3_Var2, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("list field %s in section %s is not a list field", fld.GetName(), sec.Name))
			if templ_7745c5c3_Err != nil {
				return	templ.Error{Err: templ_7745c5c3_Err, FileName: ``, Line: 17, Col: 97}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var2))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</span>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		}
		return templ_7745c5c3_Err
	})
}

func listOptionFields(form sdkapi.IHttpForm, sec sdkapi.FormSection, lf sdkapi.FormListField) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var3 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var3 == nil {
			templ_7745c5c3_Var3 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<legend>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var4 string
		templ_7745c5c3_Var4, templ_7745c5c3_Err = templ.JoinStringErrs(lf.Label)
		if templ_7745c5c3_Err != nil {
			return	templ.Error{Err: templ_7745c5c3_Err, FileName: ``, Line: 22, Col: 19}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var4))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</legend>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		
	var optType string
	if lf.Multiple {
		optType = "checkbox"
	} else {
		optType = "radio"
	}
		for _, opt := range lf.Options() {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div class=\"form-check\"><input class=\"form-check-input\" type=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var5 string
			templ_7745c5c3_Var5, templ_7745c5c3_Err = templ.JoinStringErrs(optType)
			if templ_7745c5c3_Err != nil {
				return	templ.Error{Err: templ_7745c5c3_Err, FileName: ``, Line: 35, Col: 18}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var5))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\" name=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var6 string
			templ_7745c5c3_Var6, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("%s:%s", sec.Name, lf.Name))
			if templ_7745c5c3_Err != nil {
				return	templ.Error{Err: templ_7745c5c3_Err, FileName: ``, Line: 36, Col: 50}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var6))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\" value=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var7 string
			templ_7745c5c3_Var7, templ_7745c5c3_Err = templ.JoinStringErrs(parseListOptValue(lf, opt))
			if templ_7745c5c3_Err != nil {
				return	templ.Error{Err: templ_7745c5c3_Err, FileName: ``, Line: 37, Col: 38}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var7))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if isListOptSelected(form, sec, lf, opt) {
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(" checked")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("> <label class=\"form-check-label\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var8 string
			templ_7745c5c3_Var8, templ_7745c5c3_Err = templ.JoinStringErrs(opt.Label)
			if templ_7745c5c3_Err != nil {
				return	templ.Error{Err: templ_7745c5c3_Err, FileName: ``, Line: 41, Col: 15}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var8))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</label></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		}
		return templ_7745c5c3_Err
	})
}

func isListOptSelected(form sdkapi.IHttpForm, sec sdkapi.FormSection, lf sdkapi.FormListField, opt sdkapi.FormListOption) bool {
	switch lf.Type {
	case sdkapi.FormFieldTypeText:
		v, ok := opt.Value.(string)
		if !ok {
			return false
		}

		if lf.Multiple {
			vals, err := form.GetStringValues(sec.Name, lf.Name)
			if err != nil {
				return false
			}
			return sdkutils.SliceContains(vals, v)
		} else {
			val, err := form.GetStringValue(sec.Name, lf.Name)
			if err != nil {
				return false
			}
			return val == v
		}
	case sdkapi.FormFieldTypeDecimal:
		var v float64
		k := reflect.TypeOf(opt.Value).Kind()

		switch k {
		case reflect.Int:
			v = float64(opt.Value.(int))
		case reflect.Int32:
			v = float64(opt.Value.(int32))
		case reflect.Int64:
			v = float64(opt.Value.(int64))
		case reflect.Float32:
			v = float64(opt.Value.(float32))
		case reflect.Float64:
			v = opt.Value.(float64)
		}

		if lf.Multiple {
			vals, err := form.GetFloatValues(sec.Name, lf.Name)
			if err != nil {
				return false
			}
			return sdkutils.SliceContains(vals, v)
		} else {
			val, err := form.GetFloatValue(sec.Name, lf.Name)
			if err != nil {
				return false
			}
			return val == v
		}
	}
	return false
}

func parseListOptValue(lf sdkapi.FormListField, opt sdkapi.FormListOption) (val string) {
	switch lf.Type {
	case sdkapi.FormFieldTypeText:
		v, ok := opt.Value.(string)
		if !ok {
			return ""
		}
		return v
	case sdkapi.FormFieldTypeDecimal:
		t := reflect.TypeOf(opt.Value)
		switch t.Kind() {
		case reflect.Int, reflect.Int8, reflect.Int16, reflect.Int32:
			return fmt.Sprintf("%.2f", float64(opt.Value.(int)))
		case reflect.Float32, reflect.Float64:
			return fmt.Sprintf("%.2f", opt.Value)
		}

		return "0"
	}
	return
}

func getListInputField(fld sdkapi.IFormField) (lf sdkapi.FormListField) {
	lf, _ = fld.(sdkapi.FormListField)
	return lf
}

func getListFieldInputType(fld sdkapi.IFormField) string {
    listField, ok := fld.(sdkapi.FormListField); if !ok {
		return "not a list field"
	}

	return listField.Type
}

var _ = templruntime.GeneratedTemplate